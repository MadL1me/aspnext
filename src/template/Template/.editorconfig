root = true

# top-most EditorConfig file
# Don't use tabs for indentation.
# noinspection EditorConfigKeyCorrectness
[*]
end_of_line = lf
indent_style = space
max_line_length = 140
guidelines = 140
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
indent_size = 4

# Microsoft .NET properties
csharp_remove_blank_lines_near_braces_in_declarations = true
csharp_blank_lines_around_type = 1
csharp_blank_lines_before_single_line_comment = 1
csharp_keep_blank_lines_in_declarations = 1

csharp_new_line_before_members_in_object_initializers = true
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
csharp_space_after_cast = false
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_wrap_parameters_style = chop_if_long
dotnet_naming_rule.unity_serialized_field_rule.import_to_resharper = True
dotnet_naming_rule.unity_serialized_field_rule.resharper_description = Unity serialized field
dotnet_naming_rule.unity_serialized_field_rule.resharper_guid = 5f0fdb63-c892-4d2c-9324-15c80b22a7ef
dotnet_naming_rule.unity_serialized_field_rule.severity = warning
dotnet_naming_rule.unity_serialized_field_rule.style = lower_camel_case_style
dotnet_naming_rule.unity_serialized_field_rule.symbols = unity_serialized_field_symbols
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_kinds = 
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_required_modifiers = instance
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview
dotnet_diagnostic.IDE0055.severity = warning
dotnet_diagnostic.IDE0161.severity = error

# StyleCop Rules
dotnet_diagnostic.SA0001.severity = none       # SA0001: All diagnostics of XML documentation comments has been disabled due to the current project configuration.
dotnet_diagnostic.SA1000.severity = none       # SA1000: The spacing around a C# keyword is incorrect. 
dotnet_diagnostic.SA1005.severity = none       # SA1005: A single-line comment within a C# code file does not begin with a single space. 
dotnet_diagnostic.SA1009.severity = none       # SA1009: A closing parenthesis within a C# statement is not spaced correctly. 
dotnet_diagnostic.SA1028.severity = none       # SA1028: A line of code ends with a space, tab, or other whitespace characters before the end of line character(s). 
dotnet_diagnostic.SA1100.severity = none       # SA1100: A call to a member from an inherited class begins with base., and the local class does not contain an override or implementation of the member. 
dotnet_diagnostic.SA1101.severity = none       # SA1101: A call to an instance member of the local class or a base class is not prefixed with 'this.', within a C# code file.
dotnet_diagnostic.SA1111.severity = none       # SA1111: The closing parenthesis or bracket in a call to a C# method or indexer, or the declaration of a method or indexer, is not placed on the same line as the last parameter.
dotnet_diagnostic.SA1117.severity = none       # SA1117: The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line.
dotnet_diagnostic.SA1118.severity = none       # SA1118: A parameter to a C# method or indexer, other than the first parameter, spans across multiple lines.  
dotnet_diagnostic.SA1122.severity = none       # SA1122: The C# code includes an empty string, written as "". 
dotnet_diagnostic.SA1124.severity = none       # SA1124: The C# code contains a region.
dotnet_diagnostic.SA1126.severity = none       # SA1126: A call to a member is not prefixed with the 'this.', 'base.', 'object.' or 'typename.' prefix to indicate the intended method call, within a C# code file.
dotnet_diagnostic.SA1127.severity = none       # SA1127: A generic constraint on a type or method declaration is on the same line as the declaration, within a C# code file. 
dotnet_diagnostic.SA1128.severity = none       # SA1128: A constructor initializer is on the same line as the constructor declaration, within a C# code file. 
dotnet_diagnostic.SA1131.severity = none       # SA1131: A comparison was made between a variable and a literal or constant value, and the variable appeared on the right-hand side of the expression.
dotnet_diagnostic.SA1133.severity = none       # SA1133: Two or more fields were declared in the same field declaration syntax. 
dotnet_diagnostic.SA1134.severity = none       # SA1134: Two or more attributes appeared within the same set of square brackets.
dotnet_diagnostic.SA1200.severity = none       # SA1200: A C# using directive is placed outside of a namespace element.
dotnet_diagnostic.SA1201.severity = none       # SA1201: An element within a C# code file is out of order in relation to the other elements in the code.
dotnet_diagnostic.SA1202.severity = none       # SA1202: An element within a C# code file is out of order within regard to access level, in relation to other elements in the code.
dotnet_diagnostic.SA1203.severity = none       # SA1203: A constant field is placed beneath a non-constant field.
dotnet_diagnostic.SA1204.severity = none       # SA1204: A static element is positioned beneath an instance element of the same type.
dotnet_diagnostic.SA1206.severity = none       # SA1206: The keywords within the declaration of an element do not follow a standard ordering scheme.
dotnet_diagnostic.SA1214.severity = none       # SA1214: A readonly field is positioned beneath a non-readonly field.
dotnet_diagnostic.SA1306.severity = none       # SA1306: The name of a field in C# does not begin with a lower-case letter.
dotnet_diagnostic.SA1309.severity = none       # SA1309: A field name in C# begins with an underscore.
dotnet_diagnostic.SA1310.severity = none       # SA1310: A field name in C# contains an underscore.
dotnet_diagnostic.SA1413.severity = none       # SA1413: A multi-line initializer should use a comma on the last item.
dotnet_diagnostic.SA1512.severity = none       # SA1512: A single-line comment within C# code is followed by a blank line.
dotnet_diagnostic.SA1515.severity = none       # SA1515: A single-line comment within C# code is not preceded by a blank line.
dotnet_diagnostic.SA1516.severity = none       # SA1516: Adjacent C# elements are not separated by a blank line.
dotnet_diagnostic.SA1518.severity = none       # SA1518: The line endings at the end of a file do not match the settings for the project.
dotnet_diagnostic.SA1600.severity = none       # SA1600: A C# code element is missing a documentation header.
dotnet_diagnostic.SA1601.severity = none       # SA1601: A C# partial element is missing a documentation header.
dotnet_diagnostic.SA1602.severity = none       # SA1602: An item within a C# enumeration is missing an Xml documentation header.
dotnet_diagnostic.SA1604.severity = none       # SA1604: The Xml header documentation for a C# element is missing a <summary> tag.
dotnet_diagnostic.SA1605.severity = none       # SA1605: The <summary> or <content> tag within the documentation header for a C# code element is missing or empty.
dotnet_diagnostic.SA1606.severity = none       # SA1606: The <summary> tag within the documentation header for a C# code element is empty.
dotnet_diagnostic.SA1607.severity = none       # SA1607: The <summary> or <content> tag within the documentation header for a C# code element is empty.
dotnet_diagnostic.SA1608.severity = none       # SA1608: The <summary> tag within an element's Xml header documentation contains the default text generated by Visual Studio during the creation of the element.
dotnet_diagnostic.SA1609.severity = none       # SA1609: The Xml header documentation for a C# property does not contain a <value> tag.
dotnet_diagnostic.SA1610.severity = none       # SA1610: The Xml header documentation for a C# property contains an empty <value> tag.
dotnet_diagnostic.SA1611.severity = none       # SA1611: A C# method, constructor, delegate or indexer element is missing documentation for one or more of its parameters.
dotnet_diagnostic.SA1613.severity = none       # SA1613: A <param> tag within a C# element's documentation header is missing a name attribute containing the name of the parameter.
dotnet_diagnostic.SA1614.severity = none       # SA1614: A <param> tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1615.severity = none       # SA1615: A C# element is missing documentation for its return value.
dotnet_diagnostic.SA1616.severity = none       # SA1616: The <returns> tag within a C# element's documentation header is empty.
dotnet_diagnostic.SA1617.severity = none       # SA1617: A C# code element does not contain a return value, or returns void, but the documentation header for the element contains a <returns> tag.
dotnet_diagnostic.SA1618.severity = none       # SA1618: A generic C# element is missing documentation for one or more of its generic type parameters.
dotnet_diagnostic.SA1619.severity = none       # SA1619: A generic, partial C# element is missing documentation for one or more of its generic type parameters, and the documentation for the element contains a <summary> tag.
dotnet_diagnostic.SA1620.severity = none       # SA1620: The <typeparam> tags within the Xml header documentation for a generic C# element do not match the generic type parameters on the element.
dotnet_diagnostic.SA1621.severity = none       # SA1621: A <typeparam> tag within the Xml header documentation for a generic C# element is missing a name attribute, or contains an empty name attribute.
dotnet_diagnostic.SA1622.severity = none       # SA1622: A <typeparam> tag within the Xml header documentation for a generic C# element is empty.
dotnet_diagnostic.SA1623.severity = none       # SA1623: The documentation text within a C# property's <summary> tag does not match the accessors within the property.
dotnet_diagnostic.SA1624.severity = none       # SA1624: The documentation text within a C# property's <summary> tag takes into account all of the accessors within the property, but one of the accessors has limited access.
dotnet_diagnostic.SA1625.severity = none       # SA1625: The Xml documentation for a C# element contains two or more identical entries, indicating that the documentation has been copied and pasted.
dotnet_diagnostic.SA1627.severity = none       # SA1627: The Xml header documentation for a C# code element contains an empty tag.
dotnet_diagnostic.SA1629.severity = none       # SA1629: A section of the Xml header documentation for a C# element does not end with a period (also known as a full stop).
dotnet_diagnostic.SA1630.severity = none       # SA1630: A section of the Xml header documentation for a C# element does not contain any whitespace between words.
dotnet_diagnostic.SA1631.severity = none       # SA1631: A section of the Xml header documentation for a C# element does not contain enough alphabetic characters.
dotnet_diagnostic.SA1633.severity = none       # SA1633: A C# code file is missing a standard file header.
dotnet_diagnostic.SA1634.severity = none       # SA1634: The file header at the top of a C# code file is missing a copyright tag.
dotnet_diagnostic.SA1635.severity = none       # SA1635: The file header at the top of a C# code file is missing copyright text.
dotnet_diagnostic.SA1636.severity = none       # SA1636: The file header at the top of a C# code file does not contain the appropriate copyright text.
dotnet_diagnostic.SA1637.severity = none       # SA1637: The file header at the top of a C# code file is missing the file name.
dotnet_diagnostic.SA1638.severity = none       # SA1638: The file tag within the file header at the top of a C# code file does not contain the name of the file.
dotnet_diagnostic.SA1639.severity = none       # SA1639: The file header at the top of a C# code file does not contain a filled-in summary tag.
dotnet_diagnostic.SA1640.severity = none       # SA1640: The file header at the top of a C# code file does not contain company name text.
dotnet_diagnostic.SA1641.severity = none       # SA1641: The file header at the top of a C# code file does not contain the appropriate company name text.
dotnet_diagnostic.SA1642.severity = none       # SA1642: The XML documentation header for a C# constructor does not contain the appropriate summary text.
dotnet_diagnostic.SA1643.severity = none       # SA1643: The Xml documentation header for a C# finalizer does not contain the appropriate summary text.
dotnet_diagnostic.SA1649.severity = none       # SA1649: The file name of a C# code file does not match the first type declared in the file.

dotnet_diagnostic.SA1507.severity = error
# dotnet_diagnostic.SA1505.severity = error      # Blank line immediately before or after a { line: remove it. SA1505, SA1509 
# dotnet_diagnostic.SA1509.severity = error      # Blank line immediately before or after a { line: remove it. SA1505, SA1509
# dotnet_diagnostic.SA1508.severity = error      # Blank line immediately before a } line: remove it. SA1508 

# Meziantou.Analyzer
dotnet_diagnostic.MA0001.severity = suggestion # MA0001: StringComparison is missing
dotnet_diagnostic.MA0002.severity = none       # MA0002: IEqualityComparer<string> or IComparer<string> is missing
dotnet_diagnostic.MA0003.severity = suggestion # MA0003: Add parameter name to improve readability
dotnet_diagnostic.MA0004.severity = none       # MA0004: Use Task.ConfigureAwait(false)
dotnet_diagnostic.MA0005.severity = warning    # MA0005: Use Array.Empty<T>()
dotnet_diagnostic.MA0006.severity = none       # MA0006: Use String.Equals instead of equality operator
dotnet_diagnostic.MA0007.severity = none       # MA0007: Add a comma after the last value
dotnet_diagnostic.MA0008.severity = none       # MA0008: Add StructLayoutAttribute
dotnet_diagnostic.MA0009.severity = warning    # MA0009: Add regex evaluation timeout
dotnet_diagnostic.MA0010.severity = warning    # MA0010: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.MA0011.severity = none       # MA0011: IFormatProvider is missing
dotnet_diagnostic.MA0012.severity = warning    # MA0012: Do not raise reserved exception type
dotnet_diagnostic.MA0013.severity = warning    # MA0013: Types should not extend System.ApplicationException
dotnet_diagnostic.MA0014.severity = warning    # MA0014: Do not raise System.ApplicationException type
dotnet_diagnostic.MA0015.severity = none       # MA0015: Specify the parameter name in ArgumentException
dotnet_diagnostic.MA0016.severity = none       # MA0016: Prefer returning collection abstraction instead of implementation
dotnet_diagnostic.MA0017.severity = warning    # MA0017: Abstract types should not have public or internal constructors
dotnet_diagnostic.MA0018.severity = none       # MA0018: Do not declare static members on generic types
dotnet_diagnostic.MA0019.severity = warning    # MA0019: Use EventArgs.Empty
dotnet_diagnostic.MA0020.severity = suggestion # MA0020: Use direct methods instead of LINQ methods
dotnet_diagnostic.MA0021.severity = warning    # MA0021: Use StringComparer.GetHashCode instead of string.GetHashCode
dotnet_diagnostic.MA0022.severity = warning    # MA0022: Return Task.FromResult instead of returning null
dotnet_diagnostic.MA0023.severity = warning    # MA0023: Add RegexOptions.ExplicitCapture
dotnet_diagnostic.MA0024.severity = warning    # MA0024: Use an explicit StringComparer when possible
dotnet_diagnostic.MA0025.severity = none       # MA0025: Implement the functionality instead of throwing NotImplemented Exception
dotnet_diagnostic.MA0026.severity = none       # MA0026: Fix wip comment
dotnet_diagnostic.MA0027.severity = warning    # MA0027: Do not remove original exception
dotnet_diagnostic.MA0028.severity = suggestion # MA0028: Optimize StringBuilder usage
dotnet_diagnostic.MA0029.severity = suggestion # MA0029: Combine LINQ methods
dotnet_diagnostic.MA0030.severity = warning    # MA0030: Remove useless OrderBy call
dotnet_diagnostic.MA0031.severity = suggestion # MA0031: Optimize Enumerable.Count() usage
dotnet_diagnostic.MA0032.severity = none       # MA0032: Use an overload with a CancellationToken argument
dotnet_diagnostic.MA0033.severity = warning    # MA0033: Do not tag instance fields with ThreadStaticAttribute
dotnet_diagnostic.MA0035.severity = warning    # MA0035: Do not use dangerous threading methods
dotnet_diagnostic.MA0036.severity = suggestion # MA0036: Make class static
dotnet_diagnostic.MA0037.severity = error      # MA0037: Remove empty statement
dotnet_diagnostic.MA0038.severity = suggestion # MA0038: Make method static
dotnet_diagnostic.MA0039.severity = error      # MA0039: Do not write your own certificate validation method
dotnet_diagnostic.MA0040.severity = warning    # MA0040: Flow the cancellation token
dotnet_diagnostic.MA0041.severity = suggestion # MA0041: Make property static
dotnet_diagnostic.MA0042.severity = suggestion # MA0042: Do not use blocking calls in an async method
dotnet_diagnostic.MA0043.severity = suggestion # MA0043: Use nameof operator in ArgumentException
dotnet_diagnostic.MA0044.severity = suggestion # MA0044: Remove useless ToString call
dotnet_diagnostic.MA0045.severity = none       # MA0045: Do not use blocking call in a sync method (need to make containing method async)
dotnet_diagnostic.MA0046.severity = warning    # MA0046: Use EventHandler<T> to declare events
dotnet_diagnostic.MA0047.severity = warning    # MA0047: Declare types in namespaces
dotnet_diagnostic.MA0048.severity = none       # MA0048: File name must match type name
dotnet_diagnostic.MA0049.severity = none       # MA0049: Type name should not match containing namespace
dotnet_diagnostic.MA0050.severity = suggestion # MA0050: Validate arguments correctly in iterator methods
dotnet_diagnostic.MA0051.severity = none       # MA0051: Method is too long
dotnet_diagnostic.MA0052.severity = warning    # MA0052: Replace constant Enum.ToString with nameof
dotnet_diagnostic.MA0053.severity = suggestion # MA0053: Make class sealed
dotnet_diagnostic.MA0054.severity = warning    # MA0054: Embed the caught exception as innerException
dotnet_diagnostic.MA0055.severity = warning    # MA0055: Do not use finalizer
dotnet_diagnostic.MA0056.severity = warning    # MA0056: Do not call overridable members in constructor
dotnet_diagnostic.MA0057.severity = suggestion # MA0057: Class name should end with 'Attribute'
dotnet_diagnostic.MA0058.severity = suggestion # MA0058: Class name should end with 'Exception'
dotnet_diagnostic.MA0059.severity = suggestion # MA0059: Class name should end with 'EventArgs'
dotnet_diagnostic.MA0060.severity = warning    # MA0060: The value returned by Stream.Read/Stream.ReadAsync is not used
dotnet_diagnostic.MA0061.severity = warning    # MA0061: Method overrides should not change parameter defaults
dotnet_diagnostic.MA0062.severity = warning    # MA0062: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.MA0063.severity = suggestion # MA0063: Use Where before OrderBy
dotnet_diagnostic.MA0064.severity = warning    # MA0064: Avoid locking on publicly accessible instance
dotnet_diagnostic.MA0065.severity = warning    # MA0065: Default ValueType.Equals or HashCode is used for struct's equality
dotnet_diagnostic.MA0066.severity = warning    # MA0066: Hash table unfriendly type is used in a hash table
dotnet_diagnostic.MA0067.severity = suggestion # MA0067: Use Guid.Empty
dotnet_diagnostic.MA0068.severity = warning    # MA0068: Invalid parameter name for nullable attribute
dotnet_diagnostic.MA0069.severity = warning    # MA0069: Non-constant static fields should not be visible
dotnet_diagnostic.MA0070.severity = warning    # MA0070: Obsolete attributes should include explanations
dotnet_diagnostic.MA0071.severity = suggestion # MA0071: Avoid using redundant else
dotnet_diagnostic.MA0072.severity = warning    # MA0072: Do not throw from a finally block
dotnet_diagnostic.MA0073.severity = suggestion # MA0073: Avoid comparison with bool constant
dotnet_diagnostic.MA0074.severity = none       # MA0074: Avoid implicit culture-sensitive methods
dotnet_diagnostic.MA0075.severity = suggestion # MA0075: Do not use implicit culture-sensitive ToString
dotnet_diagnostic.MA0076.severity = suggestion # MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.MA0077.severity = warning    # MA0077: A class that provides Equals(T) should implement IEquatable<T>
dotnet_diagnostic.MA0078.severity = suggestion # MA0078: Use 'Cast' instead of 'Select' to cast
dotnet_diagnostic.MA0079.severity = suggestion # MA0079: Flow the cancellation token using .WithCancellation()
dotnet_diagnostic.MA0080.severity = none       # MA0080: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.MA0081.severity = warning    # MA0081: Method overrides should not omit params keyword
dotnet_diagnostic.MA0082.severity = warning    # MA0082: NaN should not be used in comparisons
dotnet_diagnostic.MA0083.severity = warning    # MA0083: ConstructorArgument parameters should exist in constructors
dotnet_diagnostic.MA0084.severity = warning    # MA0084: Local variable should not hide other symbols
dotnet_diagnostic.MA0085.severity = warning    # MA0085: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.MA0086.severity = warning    # MA0086: Do not throw from a finalizer
dotnet_diagnostic.MA0087.severity = warning    # MA0087: Parameters with [DefaultParameterValue] attributes should also be marked [Optional]
dotnet_diagnostic.MA0088.severity = warning    # MA0088: Use [DefaultParameterValue] instead of [DefaultValue]
dotnet_diagnostic.MA0089.severity = suggestion # MA0089: Optimize string method usage
dotnet_diagnostic.MA0090.severity = suggestion # MA0090: Remove empty else/finally block
dotnet_diagnostic.MA0091.severity = warning    # MA0091: Sender should be 'this' for instance events
dotnet_diagnostic.MA0092.severity = warning    # MA0092: Sender should be 'null' for static events
dotnet_diagnostic.MA0093.severity = warning    # MA0093: EventArgs should not be null
dotnet_diagnostic.MA0094.severity = warning    # MA0094: A class that provides CompareTo(T) should implement IComparable<T>
dotnet_diagnostic.MA0095.severity = warning    # MA0095: A class that implements IEquatable<T> should override Equals(object)
dotnet_diagnostic.MA0096.severity = warning    # MA0096: A class that implements IComparable<T> should also implement IEquatable<T>
dotnet_diagnostic.MA0097.severity = warning    # MA0097: A class that implements IComparable<T> or IComparable should override comparison operators
dotnet_diagnostic.MA0098.severity = suggestion # MA0098: Use indexer instead of LINQ methods
dotnet_diagnostic.MA0099.severity = warning    # MA0099: Use Explicit enum value instead of 0
dotnet_diagnostic.MA0100.severity = warning    # MA0100: Await task before disposing of resources
dotnet_diagnostic.MA0101.severity = silent     # MA0101: String contains an implicit end of line character
dotnet_diagnostic.MA0102.severity = suggestion # MA0102: Make member readonly
dotnet_diagnostic.MA0103.severity = warning    # MA0103: Use SequenceEqual instead of equality operator
dotnet_diagnostic.MA0104.severity = none       # MA0104: Do not create a type with a name from the BCL
dotnet_diagnostic.MA0105.severity = suggestion # MA0105: Use the lambda parameters instead of using a closure
dotnet_diagnostic.MA0106.severity = suggestion # MA0106: Avoid closure by using an overload with the 'factoryArgument' parameter
dotnet_diagnostic.MA0107.severity = none       # MA0107: Do not use culture-sensitive object.ToString
dotnet_diagnostic.MA0108.severity = suggestion # MA0108: Remove redundant argument value
dotnet_diagnostic.MA0109.severity = none       # MA0109: Consider adding an overload with a Span<T> or Memory<T>
dotnet_diagnostic.MA0110.severity = suggestion # MA0110: Use the Regex source generator

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
ij_xml_space_inside_empty_tag = true
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_space_around_binary_operators = before_and_after

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2
ij_xml_space_inside_empty_tag = true

# Dotnet code style settings:
[*.{cs,vb}]
############################### 
# Naming Conventions          # 
############################### 
# Style Definitions 

## start with underscore style
dotnet_naming_style.start_with_underscore_style.required_prefix = _
dotnet_naming_style.start_with_underscore_style.capitalization = camel_case

## Pascal style
dotnet_naming_style.pascal_style.capitalization = pascal_case

## Camelcase style
dotnet_naming_style.camel_case_style.capitalization = camel_case

## Private readonly fields
dotnet_naming_symbols.private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_readonly_fields.required_modifiers = readonly

dotnet_naming_rule.private_readonly_fields_should_start_with_underscore.severity = suggestion
dotnet_naming_rule.private_readonly_fields_should_start_with_underscore.symbols = private_readonly_fields
dotnet_naming_rule.private_readonly_fields_should_start_with_underscore.style = start_with_underscore_style

## Private const fields
dotnet_naming_symbols.private_const_fields.applicable_kinds = field
dotnet_naming_symbols.private_const_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_const_fields.required_modifiers = const

dotnet_naming_rule.private_const_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.private_const_should_be_pascal_case.symbols = private_const_fields
dotnet_naming_rule.private_const_should_be_pascal_case.style = pascal_style

## Public const fields
dotnet_naming_symbols.public_const_fields.applicable_kinds = field
dotnet_naming_symbols.public_const_fields.applicable_accessibilities = public
dotnet_naming_symbols.public_const_fields.required_modifiers = const

dotnet_naming_rule.public_const_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_const_should_be_pascal_case.symbols = public_const_fields
dotnet_naming_rule.public_const_should_be_pascal_case.style = pascal_style

## Private methods
dotnet_naming_symbols.private_methods.applicable_kinds = method
dotnet_naming_symbols.private_methods.applicable_accessibilities = private

## parameters
dotnet_naming_symbols.parameters.applicable_kinds = parameter

dotnet_naming_rule.parameters_should_be_camelcase.severity = warning
dotnet_naming_rule.parameters_should_be_camelcase.symbols = parameters
dotnet_naming_rule.parameters_should_be_camelcase.style = lower_camel_case_style

# ReSharper properties
resharper_wrap_object_and_collection_initializer_style = chop_always
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion

[*.yml]
indent_size = 2

