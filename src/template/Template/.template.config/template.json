{
  "$schema": "http://json.schemastore.org/template",
  "author": "Ilya  Klimenko (MadL1me)",
  "classifications": ["WebApp", "ASP.NET 8", ".NET 8"],
  "identity": "Aspnext.Template",
  "name": "ASP.NET 8 Easy-to-use and modern template",
  "shortName": "aspnext",
  "sourceName": "AspnextTemplate",
  "tags": {
    "type": "solution",
    "language": "C#"
  },
  "guids": [
    "94618EED-2AEA-44A5-AC03-9A3B9AC0DBC4"
  ],
  "symbols": {
    "AddExamples": {
      "type": "parameter",
      "descriptions": "Adds examples and code-samples for both frontend and backend",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "AddDatabase": {
      "type": "parameter",
      "description": "Adds Database with Entity Framework and docker compose",
      "datatype": "choice",
      "defaultValue": "pgsql",
      "choices": [
        {
          "choice": "pgsql",
          "description": "Use PostgreSQL database inside docker compose with PgAdmin"
        },
        {
          "choice": "none",
          "description": "Do not use any database provider"
        }
      ]
    },
    "AddZitadelAuth": {
      "type": "parameter",
      "description": "Adds 'Zitadel' identity provider setup with docker compose",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "AddObservability": {
      "type": "parameter",
      "description": "Adds OpenTelemetry tracing and metrics support with docker compose",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "AddKafka": {
      "type": "parameter",
      "description": "Adds Kafka support with docker compose",
      "datatype": "bool",
      "defaultValue": "false"
    },
    "UsePostgreSql": {
      "type": "computed",
      "value": "(AddDatabase == \"pgsql\")"
    },
    "UseInfraProject": {
      "type": "computed",
      "value": "(UsePostgreSql || AddKafka)"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!AddExamples)",
          "exclude": ["AspnextTemplate/Controllers/ExampleController.cs"]
        },
        {
          "condition": "(!UsePostgreSql)",
          "exclude": [
            "AspnextTemplate/Data/AspnextTemplateDbContext.cs",
            "infra/docker-compose-postgres.yaml"
          ]
        },
        {
          "condition": "(!AddZitadelAuth)",
          "exclude": [
            "infra/docker-compose-zitadel.yaml",
            "src/Infrastructure/AspnextTemplate.Infrastructure.Zitadel/**"
          ]
        },
        {
          "condition": "(!AddObservability)",
          "exclude": [
            "infra/docker-compose-grafana.yaml",
            "infra/docker-compose-jaeger.yaml",
            "infra/docker-compose-prometheus.yaml",
            "infra/prometheus.yaml",
            "src/Infrastructure/AspnextTemplate.Infrastructure.Observability",
            "src/AspnextTemplate.Domain/Observability/**"
          ]
        },
        {
          "condition": "(!UseInfraProject)",
          "exclude": [
            "src/Infrastructure/AspnextTemplate.Infrastructure.Data"
          ]
        },
        {
          "condition": "(UseInfraProject && !UsePostgreSql)",
          "exclude": [
            "src/Infrastructure/AspnextTemplate.Infrastructure.Data/Repositories"
          ]
        },
        {
          "condition": "(UseInfraProject && !AddKafka)",
          "exclude": [
            "src/Infrastructure/AspnextTemplate.Infrastructure.Data/Kafka/**",
            "src/Infrastructure/AspnextTemplate.Infrastructure.Data/Kafka"
          ]
        },
        {
          "condition": "(!AddKafka)",
          "exclude": [
            "src/AspnextTemplate.Domain/Notification/**",
            "src/AspnextTemplate.Domain/Notification"
          ]
        }
      ]
    }
  ]
}
